on: pull_request

jobs:
  check:
    name: Code check
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: web/package.json

      - uses: actions/setup-node@v4
        with:
          node-version-file: web/package.json
          cache: pnpm
          cache-dependency-path: web/pnpm-lock.yaml

      - run: pnpm install
        working-directory: web

      - run: pnpm --filter=* format:check
        working-directory: web

      - run: pnpm --filter=* lint
        working-directory: web

  build-web:
    name: Build web
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-web

  run-e2e-tests:
    name: Run E2E tests
    timeout-minutes: 15
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          package_json_file: web/package.json

      - uses: actions/setup-node@v4
        with:
          node-version-file: web/package.json
          cache: pnpm
          cache-dependency-path: web/pnpm-lock.yaml

      - run: pnpm i
        working-directory: web/e2e

      - name: Install Playwright Browsers
        run: pnpm exec playwright install --with-deps
        working-directory: web/e2e

      - name: Run Playwright tests
        run: make test-ci
        working-directory: web/e2e

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: web/e2e/playwright-report/
          retention-days: 30

  lint-backend:
    name: Lint backend
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "backend/go.mod"

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          working-directory: backend

  test-backend:
    name: Test backend
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "backend/go.mod"

      - run: go test ./...
        working-directory: backend

  build-backend:
    name: Build backend
    runs-on: ubuntu-24.04

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/build-backend

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    environment: test
    needs: [build-web, build-backend]

    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/package
        id: build-pkg
        with:
          deploy-host: ${{ vars.DEPLOY_HOST }}
          version: ${GITHUB_RUN_ID}

      - shell: bash
        id: start-agent
        run: |
          eval $(ssh-agent -s)
          echo "${{ secrets.DEPLOY_SSH_KEY }}" | ssh-add -
          echo $SSH_AUTH_SOCK

      - uses: ./.github/actions/deploy
        with:
          package-file-name: ${{ steps.build-pkg.outputs.package-file-name }}
          deploy-host: ${{ vars.DEPLOY_HOST }}
          ssh-auth-sock: ${{ steps.start-agent.outputs.result }}
